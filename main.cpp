//1. Продукт. Реализовать класс, добавить поля, в том числе с типом
//char* в приватную секцию, добавить геттеры и сеттеры для этих полей в
//публичную секцию, реализовать конструкторы инициализации и
//копирования, деструкторы. Продемонстрировать следующий функционал:
//создание и удаление массива экземпляров класса; использование класса;
//поиск или сортировку в массиве;использование конструктора копирования,
//конструктора инициализации; перегруженного метода.

//2. Сделать правильно множественное наследование по типу ромб с использованием какого-нибудь класса
// из второй части контрольной работы (остальные классы-участники множественного наследования придумать).
// Во всех классах должны быть конструкторы инициализации и  поля.
//Продемонстрировать, добавив вывод сообщений в конструкторах и деструкторах созданных классов,
// в каком порядке вызываются конструкторы и деструкторы у созданных классов.
//Продемонстрировать использование трех абстрактных и трех виртуальных функций.
//Продемонстрировать перегрузку трех разных операторов (например, перегрузить вывод в поток экземпляра какого-нибудь класса),
// трех методов. Продемонстрировать использование трех дружественных функций.
//Работа с массивами. Создать массив указателей на базовый класс. Создать экземпляры классов-наследников.
// Проверить у них работу виртуальных функций.


#include <iostream>
#include <vector>
#include <algorithm>

#include "Product.h"
#include "Nonfood.h"
#include "Electronic.h"
#include "PlayStation.h"

using namespace std;

int main() {

    Electronic electronic(0);
    Nonfood nonfood(0);
    PlayStation playStation(0, 0, 0);

    vector<Product *> vector = {&electronic, &nonfood, &playStation};
    for (Product *product : vector)
        product->setData();

    for (Product *product : vector)
        product->show();

    cout << "Override methods:\n";
    cout << electronic;
    playStation++;
    playStation.show();

    return 0;
}